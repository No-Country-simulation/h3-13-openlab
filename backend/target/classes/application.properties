spring.application.name=OpenLab
spring.config.import=optional:file:.env
server.port=8081

# DB Personal
#spring.datasource.url=jdbc:mysql://localhost:3306/openlab?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=Cris15401212
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB AIVEN
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://avnadmin:AVNS_VGR05u5w2HGSwVWtZ1M@mysql-3b13f0d4-cristiangomez0686-2156.k.aivencloud.com:10319/defaultdb?createDatabaseIfNotExist=true
#spring.datasource.username=${DB_USERNAME_AIVEN}
#spring.datasource.password=${DB_PASSWORD_AIVEN}




# JWT SECRET KEY
#jwtkey.SECRET_KEY=${SECRET_KEY}

#auth0.AUTH_AUDIENCE=${AUTH_AUDIENCE}
#auth0.AUTH_DOMAIN=${AUTH_DOMAIN}

# DB LOCAL Angel
spring.datasource.url=jdbc:mysql://localhost:3306/hackaton?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.format-sql = true


spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=${AUTH0_SCOPE}
spring.security.oauth2.client.registration.auth0.redirect-uri=${AUTH0_CALLBACK_URL}
spring.security.oauth2.client.registration.auth0.authorization-grant-type=${AUTH0_GRANT_TYPE}

#Api hackaton Test

spring.security.oauth2.client.provider.auth0.issuer-uri=${AUTH0_ISSUER}
spring.security.oauth2.client.provider.auth0.authorization-uri=${AUTH0_AUTHORIZATION_URL}
spring.security.oauth2.client.provider.auth0.token-uri=${AUTH0_TOKEN_URL}
spring.security.oauth2.client.provider.auth0.user-info-uri=${AUTH0_USERINFO_URL}
spring.security.oauth2.client.provider.auth0.user-name-attribute=sub

auth0.domain=${AUTH0_DOMAIN}
auth0.audience=${AUTH0_AUDIENCE}
auth0.clientId=${AUTH0_CLIENT_ID}
auth0.clientSecret=${AUTH0_CLIENT_SECRET}

# Accedemos a nuestra endpoint de api

spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER}
spring.security.oauth2.resourceserver.jwt.audiences[]=${AUTH0_AUDIENCE}

